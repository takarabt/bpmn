/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package bpmn2.validation;

import bpmn2.BoundaryEvent;
import bpmn2.DataInputAssociation;
import bpmn2.DataOutputAssociation;
import bpmn2.InputOutputSpecification;
import bpmn2.LoopCharacteristics;
import bpmn2.Property;
import bpmn2.ResourceRole;
import bpmn2.SequenceFlow;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link bpmn2.Activity}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ActivityValidator {
	boolean validate();

	boolean validateIoSpecification(InputOutputSpecification value);
	boolean validateBoundaryEventRefs(EList<BoundaryEvent> value);
	boolean validateProperties(EList<Property> value);
	boolean validateDataInputAssociations(EList<DataInputAssociation> value);
	boolean validateDataOutputAssociations(EList<DataOutputAssociation> value);
	boolean validateResources(EList<ResourceRole> value);
	boolean validateLoopCharacteristics(LoopCharacteristics value);
	boolean validateCompletionQuantity(int value);
	boolean validateDefault(SequenceFlow value);
	boolean validateIsForCompensation(boolean value);
	boolean validateStartQuantity(int value);
}
